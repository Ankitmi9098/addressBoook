{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ankit\\\\OneDrive\\\\Documents\\\\GitHub\\\\addressBoook\\\\src\\\\component\\\\modal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Validation from \"./validation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Modal = props => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [mobileNumber, setMobileNumber] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [state, setState] = useState(\"\");\n  const [postalCode, setPostalCode] = useState(\"\");\n  const [AddressType, setAddressType] = useState(\"\");\n  const [AddressStatus, setAddressStatus] = useState(\"\");\n  const [checkedStatus, setCheckedStatus] = useState({\n    Present: false,\n    Permanent: false,\n    Both: false\n  });\n  const [name_error, set_name_error] = useState(\"\");\n  const [mobile_error, set_mobile_error] = useState(\"\");\n  const [addrs_error, set_addrs_error] = useState(\"\");\n  const [states_error, set_states_error] = useState(\"\");\n  const [city_error, set_city_error] = useState(\"\");\n  const [zip_error, set_zip_error] = useState(\"\");\n  const [isFormValid, setIsFormValid] = useState(false);\n  const [nameWasTouched, setNameWasTouched] = useState(false);\n  const [mobileWasTouched, setMobileWasTouched] = useState(false);\n  const [addrsWasTouched, setAddrsWasTouched] = useState(false);\n  const [statesWasTouched, setStatesWasTouched] = useState(false);\n  const [cityWasTouched, setCityWasTouched] = useState(false);\n  const [zipWasTouched, setZipWasTouched] = useState(false);\n\n  const clearForm = () => {\n    setName(\"\");\n    setAddress(\"\");\n    setMobileNumber(\"\");\n    setState(\"\");\n    setCity(\"\");\n    setPostalCode(\"\");\n    setAddressStatus(\"\");\n    setCheckedStatus({\n      Present: false,\n      Permanent: false,\n      Both: false\n    });\n    set_name_error(\"\");\n    set_addrs_error(\"\");\n    set_city_error(\"\");\n    set_mobile_error(\"\");\n    set_zip_error(\"\");\n    set_states_error(\"\");\n    setNameWasTouched(false);\n    setMobileWasTouched(false);\n    setAddrsWasTouched(false);\n    setCityWasTouched(false);\n    setStatesWasTouched(false);\n    setZipWasTouched(false);\n  };\n\n  var CharRegEx = /^[a-zA-Z ]+$/;\n\n  const nameHandler = event => {\n    if (event.target.value.trim() === \"\") {\n      set_name_error(\"Please enter a value\");\n    } else if (!event.target.value.trim().match(CharRegEx)) {\n      set_name_error(\"Chatercters from a-z/A-Z allowed\");\n    } else {\n      set_name_error(\"\");\n    }\n\n    setNameWasTouched(true);\n    setName(event.target.value);\n  };\n\n  const mobileNumberHandler = event => {\n    if (event.target.value.trim() === \"\") {\n      set_mobile_error(\"Please enter a value\");\n    } else if (isNaN(event.target.value.trim())) {\n      set_mobile_error(\"Please enter numeric value\");\n    } else if (event.target.value.trim().length !== 10) {\n      set_mobile_error(\"Please enter a valid 10 digit mobile number\");\n    } else {\n      set_mobile_error(\"\");\n    }\n\n    setMobileWasTouched(true);\n    setMobileNumber(event.target.value);\n  };\n\n  const addressHandler = event => {\n    if (event.target.value.trim() === \"\") {\n      set_addrs_error(\"Please enter a value\");\n    } else if (event.target.value.trim().split(\" \").length < 3) {\n      set_addrs_error(\"Address should have a length of atleast 3 words\");\n    } else {\n      set_addrs_error(\"\");\n    }\n\n    setAddrsWasTouched(true);\n    setAddress(event.target.value);\n  };\n\n  const stateHandler = event => {\n    if (event.target.value.trim() === \"\") {\n      set_states_error(\"Please enter a value\");\n    } else if (!event.target.value.trim().match(CharRegEx)) {\n      set_states_error(\"Chatercters from a-z/A-Z allowed\");\n    } else {\n      set_states_error(\"\");\n    }\n\n    setStatesWasTouched(true);\n    setState(event.target.value);\n  };\n\n  const cityHandler = event => {\n    if (event.target.value.trim() === \"\") {\n      set_city_error(\"Please enter a value\");\n    } else if (!event.target.value.trim().match(CharRegEx)) {\n      set_city_error(\"Chatercters from a-z/A-Z allowed\");\n    } else {\n      set_city_error(\"\");\n    }\n\n    setCityWasTouched(true);\n    setCity(event.target.value);\n  };\n\n  const postalCodeHandler = event => {\n    if (event.target.value.trim() === \"\") {\n      set_zip_error(\"Please enter a value\");\n    } else if (isNaN(event.target.value.trim())) {\n      set_zip_error(\"Please enter numeric value\");\n    } else if (event.target.value.trim().length !== 6) {\n      set_zip_error(\"Please enter a valid 6 digit zip pin\");\n    } else {\n      set_zip_error(\"\");\n    }\n\n    setZipWasTouched(true);\n    setPostalCode(event.target.value);\n  };\n\n  const addressTypeHandler = event => {\n    setAddressType(event.target.value);\n\n    if (AddressType !== \"\") {\n      clearForm();\n    }\n  };\n\n  const addressStatusHandler = event => {\n    setAddressStatus(event.target.value);\n    setCheckedStatus(prevCheckedStatus => {\n      return { ...prevCheckedStatus,\n        [event.target.value]: true\n      };\n    });\n  };\n\n  useEffect(() => {\n    {\n      nameWasTouched && name_error === \"\" && mobileWasTouched && mobile_error === \"\" && statesWasTouched && states_error === \"\" && cityWasTouched && city_error === \"\" && zipWasTouched && zip_error === \"\" && addrsWasTouched && addrs_error === \"\" && AddressStatus !== \"\" && setIsFormValid(true);\n    }\n  }, [name_error, mobile_error, states_error, city_error, zip_error, addrs_error, nameWasTouched, addrsWasTouched, mobileWasTouched, cityWasTouched, statesWasTouched, zipWasTouched, AddressStatus]);\n\n  const onSubmitHandler = event => {\n    event.preventDefault();\n    const details = {\n      addressType: AddressType,\n      name: name.trim(),\n      mobile: mobileNumber.trim(),\n      addrss: address.trim(),\n      city: city.trim(),\n      states: state.trim(),\n      zip: postalCode.trim(),\n      type: AddressStatus.trim()\n    };\n    props.onAddAddress(details);\n    setAddressType(\"\");\n    clearForm();\n\n    if (AddressType === \"Personal\") {\n      props.onTabChangeToPersonal();\n    } else if (AddressType === \"Business\") {\n      props.onTabChangeToBusiness();\n    }\n  };\n\n  const closeModal = () => {\n    clearForm();\n    setAddressType(\"\");\n    props.onClose();\n  };\n\n  if (!props.show) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: closeModal,\n    className: \"bg\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: event => {\n        event.stopPropagation();\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pop\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Fill Address details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close\",\n            onClick: closeModal,\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onChange: addressTypeHandler,\n          className: \"radio\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: \"personal\",\n              name: \"address-type\",\n              value: \"Personal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"personal\",\n              children: \"Personal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: \"business\",\n              name: \"address-type\",\n              value: \"Business\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"business\",\n              children: \"Business\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), AddressType && /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: onSubmitHandler,\n          id: \"address-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"fields\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => {\n                setNameWasTouched(true);\n              },\n              onBlur: () => {\n                nameWasTouched && name === \"\" && set_name_error(\"Please Enter a value\");\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                onChange: nameHandler,\n                value: name,\n                className: \"input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Validation, {\n                errMsg: name_error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => {\n                setMobileWasTouched(true);\n              },\n              onBlur: () => {\n                mobileWasTouched && mobileNumber === \"\" && set_mobile_error(\"Please Enter a value\");\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Mobile No.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                onChange: mobileNumberHandler,\n                value: mobileNumber,\n                className: \"input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Validation, {\n                errMsg: mobile_error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => {\n                setAddrsWasTouched(true);\n              },\n              onBlur: () => {\n                addrsWasTouched && address === \"\" && set_addrs_error(\"Please Enter a value\");\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                type: \"text\",\n                onChange: addressHandler,\n                value: address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Validation, {\n              errMsg: addrs_error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => {\n                setCityWasTouched(true);\n              },\n              onBlur: () => {\n                cityWasTouched && city === \"\" && set_city_error(\"Please Enter a value\");\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"City\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                onChange: cityHandler,\n                value: city,\n                className: \"input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Validation, {\n              errMsg: city_error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => {\n                setStatesWasTouched(true);\n              },\n              onBlur: () => {\n                statesWasTouched && state === \"\" && set_states_error(\"Please Enter a value\");\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"State\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                onChange: stateHandler,\n                value: state,\n                className: \"input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Validation, {\n              errMsg: states_error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => {\n                setZipWasTouched(true);\n              },\n              onBlur: () => {\n                zipWasTouched && postalCode === \"\" && set_zip_error(\"Please Enter a value\");\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Postal Code/Zip Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                onChange: postalCodeHandler,\n                value: postalCode,\n                className: \"input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Validation, {\n              errMsg: zip_error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"radios\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  id: \"Present\",\n                  name: \"address-status\",\n                  value: \"Present\",\n                  checked: checkedStatus.present,\n                  onChange: addressStatusHandler\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"Present\",\n                  children: \"Present\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  id: \"Permanent\",\n                  name: \"address-status\",\n                  value: \"Permanent\",\n                  checked: checkedStatus.permanent,\n                  onChange: addressStatusHandler\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"Permanent\",\n                  children: \"Permanent\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 381,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  id: \"Both\",\n                  name: \"address-status\",\n                  value: \"Both\",\n                  checked: checkedStatus.both,\n                  onChange: addressStatusHandler\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"Both\",\n                  children: \"Both\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 392,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btns\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"save\",\n              disabled: !isFormValid,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"reset\",\n              className: \"clear\",\n              onClick: clearForm,\n              children: \"Clear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Modal, \"/Dw+j6I5f82hB4WZZB/hymRVcXo=\");\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["C:/Users/ankit/OneDrive/Documents/GitHub/addressBoook/src/component/modal.js"],"names":["React","useEffect","useState","Validation","Modal","props","name","setName","mobileNumber","setMobileNumber","address","setAddress","city","setCity","state","setState","postalCode","setPostalCode","AddressType","setAddressType","AddressStatus","setAddressStatus","checkedStatus","setCheckedStatus","Present","Permanent","Both","name_error","set_name_error","mobile_error","set_mobile_error","addrs_error","set_addrs_error","states_error","set_states_error","city_error","set_city_error","zip_error","set_zip_error","isFormValid","setIsFormValid","nameWasTouched","setNameWasTouched","mobileWasTouched","setMobileWasTouched","addrsWasTouched","setAddrsWasTouched","statesWasTouched","setStatesWasTouched","cityWasTouched","setCityWasTouched","zipWasTouched","setZipWasTouched","clearForm","CharRegEx","nameHandler","event","target","value","trim","match","mobileNumberHandler","isNaN","length","addressHandler","split","stateHandler","cityHandler","postalCodeHandler","addressTypeHandler","addressStatusHandler","prevCheckedStatus","onSubmitHandler","preventDefault","details","addressType","mobile","addrss","states","zip","type","onAddAddress","onTabChangeToPersonal","onTabChangeToBusiness","closeModal","onClose","show","stopPropagation","present","permanent","both"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Validation from \"./validation\";\r\n\r\nconst Modal = (props) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [mobileNumber, setMobileNumber] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [state, setState] = useState(\"\");\r\n  const [postalCode, setPostalCode] = useState(\"\");\r\n  const [AddressType, setAddressType] = useState(\"\");\r\n  const [AddressStatus, setAddressStatus] = useState(\"\");\r\n  const [checkedStatus, setCheckedStatus] = useState({\r\n    Present: false,\r\n    Permanent: false,\r\n    Both: false,\r\n  });\r\n\r\n  const [name_error, set_name_error] = useState(\"\");\r\n  const [mobile_error, set_mobile_error] = useState(\"\");\r\n  const [addrs_error, set_addrs_error] = useState(\"\");\r\n  const [states_error, set_states_error] = useState(\"\");\r\n  const [city_error, set_city_error] = useState(\"\");\r\n  const [zip_error, set_zip_error] = useState(\"\");\r\n  const [isFormValid, setIsFormValid] = useState(false);\r\n\r\n  const [nameWasTouched, setNameWasTouched] = useState(false);\r\n  const [mobileWasTouched, setMobileWasTouched] = useState(false);\r\n  const [addrsWasTouched, setAddrsWasTouched] = useState(false);\r\n  const [statesWasTouched, setStatesWasTouched] = useState(false);\r\n  const [cityWasTouched, setCityWasTouched] = useState(false);\r\n  const [zipWasTouched, setZipWasTouched] = useState(false);\r\n  const clearForm = () => {\r\n    setName(\"\");\r\n    setAddress(\"\");\r\n    setMobileNumber(\"\");\r\n    setState(\"\");\r\n    setCity(\"\");\r\n    setPostalCode(\"\");\r\n    setAddressStatus(\"\");\r\n    setCheckedStatus({ Present: false, Permanent: false, Both: false });\r\n    set_name_error(\"\");\r\n    set_addrs_error(\"\");\r\n    set_city_error(\"\");\r\n    set_mobile_error(\"\");\r\n    set_zip_error(\"\");\r\n    set_states_error(\"\");\r\n    setNameWasTouched(false);\r\n    setMobileWasTouched(false);\r\n    setAddrsWasTouched(false);\r\n    setCityWasTouched(false);\r\n    setStatesWasTouched(false);\r\n    setZipWasTouched(false);\r\n  };\r\n\r\n  var CharRegEx = /^[a-zA-Z ]+$/;\r\n  const nameHandler = (event) => {\r\n    if (event.target.value.trim() === \"\") {\r\n      set_name_error(\"Please enter a value\");\r\n    } else if (!event.target.value.trim().match(CharRegEx)) {\r\n      set_name_error(\"Chatercters from a-z/A-Z allowed\");\r\n    } else {\r\n      set_name_error(\"\");\r\n    }\r\n    setNameWasTouched(true);\r\n    setName(event.target.value);\r\n  };\r\n  const mobileNumberHandler = (event) => {\r\n    if (event.target.value.trim() === \"\") {\r\n      set_mobile_error(\"Please enter a value\");\r\n    } else if (isNaN(event.target.value.trim())) {\r\n      set_mobile_error(\"Please enter numeric value\");\r\n    } else if (event.target.value.trim().length !== 10) {\r\n      set_mobile_error(\"Please enter a valid 10 digit mobile number\");\r\n    } else {\r\n      set_mobile_error(\"\");\r\n    }\r\n    setMobileWasTouched(true);\r\n    setMobileNumber(event.target.value);\r\n  };\r\n  const addressHandler = (event) => {\r\n    if (event.target.value.trim() === \"\") {\r\n      set_addrs_error(\"Please enter a value\");\r\n    } else if (event.target.value.trim().split(\" \").length < 3) {\r\n      set_addrs_error(\"Address should have a length of atleast 3 words\");\r\n    } else {\r\n      set_addrs_error(\"\");\r\n    }\r\n    setAddrsWasTouched(true);\r\n    setAddress(event.target.value);\r\n  };\r\n  const stateHandler = (event) => {\r\n    if (event.target.value.trim() === \"\") {\r\n      set_states_error(\"Please enter a value\");\r\n    } else if (!event.target.value.trim().match(CharRegEx)) {\r\n      set_states_error(\"Chatercters from a-z/A-Z allowed\");\r\n    } else {\r\n      set_states_error(\"\");\r\n    }\r\n    setStatesWasTouched(true);\r\n    setState(event.target.value);\r\n  };\r\n  const cityHandler = (event) => {\r\n    if (event.target.value.trim() === \"\") {\r\n      set_city_error(\"Please enter a value\");\r\n    } else if (!event.target.value.trim().match(CharRegEx)) {\r\n      set_city_error(\"Chatercters from a-z/A-Z allowed\");\r\n    } else {\r\n      set_city_error(\"\");\r\n    }\r\n    setCityWasTouched(true);\r\n    setCity(event.target.value);\r\n  };\r\n  const postalCodeHandler = (event) => {\r\n    if (event.target.value.trim() === \"\") {\r\n      set_zip_error(\"Please enter a value\");\r\n    } else if (isNaN(event.target.value.trim())) {\r\n      set_zip_error(\"Please enter numeric value\");\r\n    } else if (event.target.value.trim().length !== 6) {\r\n      set_zip_error(\"Please enter a valid 6 digit zip pin\");\r\n    } else {\r\n      set_zip_error(\"\");\r\n    }\r\n    setZipWasTouched(true);\r\n    setPostalCode(event.target.value);\r\n  };\r\n  const addressTypeHandler = (event) => {\r\n    setAddressType(event.target.value);\r\n    if (AddressType !== \"\") {\r\n      clearForm();\r\n    }\r\n  };\r\n  const addressStatusHandler = (event) => {\r\n    setAddressStatus(event.target.value);\r\n    setCheckedStatus((prevCheckedStatus) => {\r\n      return { ...prevCheckedStatus, [event.target.value]: true };\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    {\r\n      nameWasTouched &&\r\n        name_error === \"\" &&\r\n        mobileWasTouched &&\r\n        mobile_error === \"\" &&\r\n        statesWasTouched &&\r\n        states_error === \"\" &&\r\n        cityWasTouched &&\r\n        city_error === \"\" &&\r\n        zipWasTouched &&\r\n        zip_error === \"\" &&\r\n        addrsWasTouched &&\r\n        addrs_error === \"\" &&\r\n        AddressStatus !== \"\" &&\r\n        setIsFormValid(true);\r\n    }\r\n  }, [\r\n    name_error,\r\n    mobile_error,\r\n    states_error,\r\n    city_error,\r\n    zip_error,\r\n    addrs_error,\r\n    nameWasTouched,\r\n    addrsWasTouched,\r\n    mobileWasTouched,\r\n    cityWasTouched,\r\n    statesWasTouched,\r\n    zipWasTouched,\r\n    AddressStatus,\r\n  ]);\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    const details = {\r\n      addressType: AddressType,\r\n      name: name.trim(),\r\n      mobile: mobileNumber.trim(),\r\n      addrss: address.trim(),\r\n      city: city.trim(),\r\n      states: state.trim(),\r\n      zip: postalCode.trim(),\r\n      type: AddressStatus.trim(),\r\n    };\r\n    props.onAddAddress(details);\r\n    setAddressType(\"\");\r\n    clearForm();\r\n    if(AddressType === \"Personal\"){\r\n      props.onTabChangeToPersonal();\r\n    } else if (AddressType === \"Business\"){\r\n      props.onTabChangeToBusiness();\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    clearForm();\r\n    setAddressType(\"\");\r\n    props.onClose();\r\n  }\r\n\r\n  if (!props.show) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div onClick={closeModal} className=\"bg\">\r\n      <div\r\n        onClick={(event) => {\r\n          event.stopPropagation();\r\n        }}\r\n      >\r\n        <div className=\"pop\">\r\n          <h3>Fill Address details</h3>\r\n          <div>\r\n            <button className=\"close\" onClick={closeModal}>\r\n              X\r\n            </button>\r\n          </div>\r\n          <div onChange={addressTypeHandler} className=\"radio\">\r\n            <div>\r\n              <input\r\n                type=\"radio\"\r\n                id=\"personal\"\r\n                name=\"address-type\"\r\n                value=\"Personal\"\r\n              />\r\n              <label htmlFor=\"personal\">Personal</label>\r\n            </div>\r\n            <div>\r\n              <input\r\n                type=\"radio\"\r\n                id=\"business\"\r\n                name=\"address-type\"\r\n                value=\"Business\"\r\n              />\r\n              <label htmlFor=\"business\">Business</label>\r\n            </div>\r\n          </div>\r\n          {AddressType && (\r\n            <form onSubmit={onSubmitHandler} id=\"address-form\">\r\n              <div className=\"fields\">\r\n                <div\r\n                  onClick={() => {\r\n                    setNameWasTouched(true);\r\n                  }}\r\n                  onBlur={() => {\r\n                    nameWasTouched &&\r\n                      name === \"\" &&\r\n                      set_name_error(\"Please Enter a value\");\r\n                  }}\r\n                >\r\n                  <label>Name</label>\r\n                  <br></br>\r\n                  <input\r\n                    type=\"text\"\r\n                    onChange={nameHandler}\r\n                    value={name}\r\n                    className=\"input\"\r\n                  />\r\n                  <Validation errMsg={name_error}></Validation>\r\n                </div>\r\n\r\n                <div\r\n                  onClick={() => {\r\n                    setMobileWasTouched(true);\r\n                  }}\r\n                  onBlur={() => {\r\n                    mobileWasTouched &&\r\n                      mobileNumber === \"\" &&\r\n                      set_mobile_error(\"Please Enter a value\");\r\n                  }}\r\n                >\r\n                  <label>Mobile No.</label>\r\n                  <br></br>\r\n                  <input\r\n                    type=\"text\"\r\n                    onChange={mobileNumberHandler}\r\n                    value={mobileNumber}\r\n                    className=\"input\"\r\n                  />\r\n                  <Validation errMsg={mobile_error}></Validation>\r\n                </div>\r\n                <div\r\n                  onClick={() => {\r\n                    setAddrsWasTouched(true);\r\n                  }}\r\n                  onBlur={() => {\r\n                    addrsWasTouched &&\r\n                      address === \"\" &&\r\n                      set_addrs_error(\"Please Enter a value\");\r\n                  }}\r\n                >\r\n                  <label>Address</label>\r\n                  <br></br>\r\n                  <textarea\r\n                    type=\"text\"\r\n                    onChange={addressHandler}\r\n                    value={address}\r\n                  />\r\n                </div>\r\n                <Validation errMsg={addrs_error}></Validation>\r\n                <div\r\n                  onClick={() => {\r\n                    setCityWasTouched(true);\r\n                  }}\r\n                  onBlur={() => {\r\n                    cityWasTouched &&\r\n                      city === \"\" &&\r\n                      set_city_error(\"Please Enter a value\");\r\n                  }}\r\n                >\r\n                  <label>City</label>\r\n                  <br></br>\r\n                  <input\r\n                    type=\"text\"\r\n                    onChange={cityHandler}\r\n                    value={city}\r\n                    className=\"input\"\r\n                  />\r\n                </div>\r\n                <Validation errMsg={city_error}></Validation>\r\n                <div\r\n                  onClick={() => {\r\n                    setStatesWasTouched(true);\r\n                  }}\r\n                  onBlur={() => {\r\n                    statesWasTouched &&\r\n                      state === \"\" &&\r\n                      set_states_error(\"Please Enter a value\");\r\n                  }}\r\n                >\r\n                  <label>State</label>\r\n                  <br></br>\r\n                  <input\r\n                    type=\"text\"\r\n                    onChange={stateHandler}\r\n                    value={state}\r\n                    className=\"input\"\r\n                  />\r\n                </div>\r\n                <Validation errMsg={states_error}></Validation>\r\n                <div\r\n                  onClick={() => {\r\n                    setZipWasTouched(true);\r\n                  }}\r\n                  onBlur={() => {\r\n                    zipWasTouched &&\r\n                      postalCode === \"\" &&\r\n                      set_zip_error(\"Please Enter a value\");\r\n                  }}\r\n                >\r\n                  <label>Postal Code/Zip Code</label>\r\n                  <br></br>\r\n                  <input\r\n                    type=\"text\"\r\n                    onChange={postalCodeHandler}\r\n                    value={postalCode}\r\n                    className=\"input\"\r\n                  />\r\n                </div>\r\n                <Validation errMsg={zip_error}></Validation>\r\n                <div className=\"radios\">\r\n                  <div>\r\n                    <input\r\n                      type=\"radio\"\r\n                      id=\"Present\"\r\n                      name=\"address-status\"\r\n                      value=\"Present\"\r\n                      checked={checkedStatus.present}\r\n                      onChange={addressStatusHandler}\r\n                    />\r\n                    <label htmlFor=\"Present\">Present</label>\r\n                  </div>\r\n                  <div>\r\n                    <input\r\n                      type=\"radio\"\r\n                      id=\"Permanent\"\r\n                      name=\"address-status\"\r\n                      value=\"Permanent\"\r\n                      checked={checkedStatus.permanent}\r\n                      onChange={addressStatusHandler}\r\n                    />\r\n                    <label htmlFor=\"Permanent\">Permanent</label>\r\n                  </div>\r\n                  <div className=\"\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      id=\"Both\"\r\n                      name=\"address-status\"\r\n                      value=\"Both\"\r\n                      checked={checkedStatus.both}\r\n                      onChange={addressStatusHandler}\r\n                    />\r\n                    <label htmlFor=\"Both\">Both</label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"btns\">\r\n                <button type=\"submit\" className=\"save\" disabled={!isFormValid}>\r\n                  Save\r\n                </button>\r\n                <button type=\"reset\" className=\"clear\" onClick={clearForm}>\r\n                  Clear\r\n                </button>\r\n              </div>\r\n            </form>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n"]},"metadata":{},"sourceType":"module"}